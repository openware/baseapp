// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`OpenOrders should render 1`] = `
<ContextProvider
  value={
    Object {
      "store": Object {
        "@@observable": [Function],
        "dispatch": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      },
      "subscription": Object {
        "addNestedSub": [Function],
        "getListeners": [Function],
        "handleChangeWrapper": [Function],
        "isSubscribed": [Function],
        "notifyNestedSubs": [Function],
        "onStateChange": [Function],
        "trySubscribe": [Function],
        "tryUnsubscribe": [Function],
      },
    }
  }
>
  // @ts-ignore
  <Connect(Component)
    cancelFetching={false}
    currentMarket={
      Object {
        "amount_precision": 4,
        "base_unit": "eth",
        "id": "ethusd",
        "max_price": "0.0",
        "min_amount": "0.0",
        "min_price": "0.0",
        "name": "ETH/USD",
        "price_precision": 4,
        "quote_unit": "usd",
      }
    }
    fetching={false}
    list={
      Array [
        Object {
          "created_at": "2019-01-31T21:14:04+01:00",
          "executed_volume": "10",
          "id": 131,
          "market": "ethusd",
          "origin_volume": "10",
          "price": "104.4313",
          "remaining_volume": "0",
          "side": "sell",
          "state": "wait",
        },
      ]
    }
    userLoggedIn={true}
  />
</ContextProvider>
`;
