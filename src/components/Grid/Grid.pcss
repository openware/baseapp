.cr-grid {
  position: relative;
}

.react-grid-layout {
  position: relative;
  transition: height 200ms ease;
}

.react-grid-item {
  background: var(--grid-item-bg) !important;
  transition: all 200ms ease;
  transition-property: left, top;

  &.cssTransforms {
    transition-property: transform;
  }

  &.resizing {
    will-change: width, height;
    z-index: 1;

    .cr-grid-item {
      pointer-events: none;
    }
  }

  &.react-draggable-dragging {
    transition: none;
    will-change: transform;
    z-index: 3;
  }

  &.react-grid-placeholder {
    background: var(--grid-placeholder-bg);
    border: 1px solid var(--grid-placeholder-border-color);
    transition-duration: 100ms;
    user-select: none;
    z-index: 2;
  }

  .react-resizable-handle {
    border: 4px solid var(--grid-resizable-border-color);
    border-left-color: transparent;
    border-top-color: transparent;
    bottom: 0;
    cursor: se-resize;
    height: 0;
    opacity: 0.5;
    position: absolute;
    right: 0;
    width: 0;

    &::after {
      border-bottom: 1px solid var(--grid-resizable-border-color);
      bottom: calc(var(--gap) * 0.7);
      content: '';
      opacity: 0.8;
      position: absolute;
      right: calc(var(--gap) * (-2.7));
      transform: rotate(-45deg);
      width: calc(var(--gap) * 8);
    }

    &::before {
      border-bottom: 1px solid var(--grid-resizable-border-color);
      bottom: calc(var(--gap) * 1);
      content: '';
      opacity: 0.8;
      position: absolute;
      right: calc(var(--gap) * (-2.7));
      transform: rotate(-45deg);
      width: calc(var(--gap) * 5);
    }
  }
}
